import{_ as d,c as r,a2 as e,o}from"./chunks/framework.DXaKt7EB.js";const a="/logo.svg",b=JSON.parse('{"title":"前言","description":"","frontmatter":{},"headers":[],"relativePath":"docs/preface.md","filePath":"docs/preface.md","lastUpdated":1748313808000}'),l={name:"docs/preface.md"};function c(n,t,p,i,h,s){return o(),r("div",null,t[0]||(t[0]=[e('<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h1><h2 id="项目简介" tabindex="-1">项目简介 <a class="header-anchor" href="#项目简介" aria-label="Permalink to &quot;项目简介&quot;">​</a></h2><img src="'+a+'" alt="flowlong" width="120px"><blockquote><p>项目说明 <code>flowlong</code> 中文名 <code>飞龙工作流</code> LOGO 采用中国红、中国龙、华表为元素设计，象征着蒸蒸日上、飞龙在天的美好愿景！</p></blockquote><p>飞龙工作流引擎 <a href="https://gitee.com/aizuda/flowlong" target="_blank" rel="noreferrer">FlowLong</a> 真正的国产工作流引擎 🐉 json 格式实例模型、简易审批流程设计器、🚩为中国特色审批匠心打造❗</p><p><a href="https://aizuda.com/authorize?from=fld" target="_blank" rel="noreferrer">💎企业版点击预览</a></p><ul><li><p>开源地址：<a href="https://gitee.com/aizuda/flowlong" target="_blank" rel="noreferrer">gitee</a> <a href="https://github.com/aizuda/flowlong" target="_blank" rel="noreferrer">github</a></p></li><li><p>官网文档：<a href="https://doc.flowlong.com/" target="_blank" rel="noreferrer">https://doc.flowlong.com/</a></p></li></ul><blockquote><p>⭕本项目 <code>双协议授权</code> 默认采用 <code>Apache-2.0</code> 协议开源 <code>完全开放</code> <code>遵守附加协议</code> 的前提下允许任何目的商用。 如果违反 <code>附加协议</code> 自动升级为 <code>AGPL-3.0</code> 协议。</p></blockquote><blockquote><p>🔴附加协议：使用方在项目介绍中显著位置<code>必须标注</code>版权信息<code>（链接仓库地址）</code>，<code>不允许删除源码注释申明</code>，<code>不允许山寨换皮商用与官方企业版竞争</code>，否则视为侵权<code>（索赔100万）</code>。</p></blockquote><blockquote><p>使用必须遵守国家法律法规，⛔不允许非法项目使用，后果自负❗</p></blockquote><p><a href="https://gitee.com/aizuda/flowlong/issues/I7XGP5" target="_blank" rel="noreferrer">使用源码登记入口</a></p><p><a href="https://flowlong-desginer.pages.dev/" target="_blank" rel="noreferrer">流程设计器在线演示</a></p><p><a href="https://gitee.com/flowlong/flowlong-designer" target="_blank" rel="noreferrer">流程设计器源码下载</a></p><h2 id="场景说明" tabindex="-1">场景说明 <a class="header-anchor" href="#场景说明" aria-label="Permalink to &quot;场景说明&quot;">​</a></h2><blockquote><p>作流引擎的适用场景广泛，主要集中在需要自动化、管理和优化业务流程的各个领域。 总结来说，工作流引擎在复杂的业务流程、跨部门协作、自动化任务和决策、监控和报告、变更管理和跨系统集成等场景中发挥着重要作用。 它们能够提高企业级应用的自动化水平，优化业务流程，提高工作效率和质量，降低错误率，从而为企业带来更大的价值。</p></blockquote><p>逻辑规则引擎用推荐 <a href="https://gitee.com/dromara/liteFlow" target="_blank" rel="noreferrer">LiteFlow</a> 融合了编排特性和规则引擎的所有特性。</p><h2 id="功能说明" tabindex="-1">功能说明 <a class="header-anchor" href="#功能说明" aria-label="Permalink to &quot;功能说明&quot;">​</a></h2><blockquote><p>满足部分标准 <code>BPMN</code> 功能的同时支持🚩中国特色流程操作概念</p></blockquote><table tabindex="0"><thead><tr><th>支持功能</th><th>功能描述</th><th>完成程度</th></tr></thead><tbody><tr><td>条件分支</td><td>排它分支用于在流程中实现决策，即根据条件选择一个分支执行。也用于处理异常情况，将流程路由到特定的异常处理分支。</td><td>✅</td></tr><tr><td>并行分支</td><td>并行分支允许将流程分成多条分支，也可以把多条分支汇聚到一起。其功能是基于进入和外出顺序流的，即可以分叉<code>（fork）</code>成多个并行分支，也可以汇聚<code>（join）</code>多个并行分支。</td><td>✅</td></tr><tr><td>包容分支</td><td>包容分支可以看做是排它分支和并行分支的结合体。它允许基于条件选择多条分支执行，但如果没有任何一个分支满足条件，则可以选择默认分支。</td><td>✅</td></tr><tr><td>路由分支</td><td>根据条件选择一个分支执行（重定向到指定配置节点），也可以选择默认分支执行（继续往下执行）。</td><td>✅</td></tr><tr><td>父子流程</td><td>主流程节点设置子流程，子流程节点会自动进入子流程，子流程结束后，主流程节点会自动跳转。（支持同步异步）</td><td>✅</td></tr><tr><td>顺序会签</td><td>指同一个审批节点设置多个人，如A、B、C三人，三人按顺序依次收到待办，即A先审批，A提交后B才能审批，需全部同意之后，审批才可到下一审批节点。</td><td>✅</td></tr><tr><td>并行会签</td><td>指同一个审批节点设置多个人，如A、B、C三人，三人会同时收到待办任务，需全部同意之后，审批才可到下一审批节点。</td><td>✅</td></tr><tr><td>或签</td><td>一个流程审批节点里有多个处理人，任意一个人处理后就能进入下一个节点</td><td>✅</td></tr><tr><td>票签</td><td>指同一个审批节点设置多个人，如A、B、C三人，分别定义不同的权重，当投票权重比例大于 50% 就能进入下一个节点</td><td>✅</td></tr><tr><td>抄送</td><td>将审批结果通知给抄送列表对应的人，同一个流程实例默认不重复抄送给同一人</td><td>✅</td></tr><tr><td>驳回</td><td>将审批重置发送给某节点，重新审批。驳回也叫退回，也可以分退回申请人、退回上一步、任意退回等</td><td>✅</td></tr><tr><td>驳回策略</td><td>支持驳回策略（1，上一步 2，发起人 3，任意节点），重新审批执行策略（1，继续执行 2，退回驳回节点）</td><td>✅</td></tr><tr><td>分配</td><td>允许用户自行决定任务转办、委派、主办 及其它</td><td>✅</td></tr><tr><td>转办</td><td>A转给其B审批，B审批后，进入下一节点</td><td>✅</td></tr><tr><td>离职转办</td><td>A所有参与任务批量转给B审批</td><td>✅</td></tr><tr><td>委派</td><td>A转给其B审批，B审批后，转给A，A审批后进入下一节点</td><td>✅</td></tr><tr><td>代理</td><td>A指定代理人B之后，就不用做任何操作了。B完成任务后，A和B都能查到这个任务，A完成任务，B就看不到任务了</td><td>✅</td></tr><tr><td>跳转</td><td>可以将当前流程实例跳转到任意办理节点</td><td>✅</td></tr><tr><td>拿回</td><td>在当前办理人尚未处理文件前，允许上一节点提交人员执行拿回</td><td>✅</td></tr><tr><td>唤醒</td><td>历史任务唤醒，重新进入审批流程</td><td>✅</td></tr><tr><td>撤销</td><td>流程发起者可以对流程进行撤销处理</td><td>✅</td></tr><tr><td>加签</td><td>允许当前办理人根据需要自行增加当前办理节点的办理人员（前置节点，后置节点）</td><td>✅</td></tr><tr><td>减签</td><td>在当前办理人操作之前减少办理人</td><td>✅</td></tr><tr><td>追加</td><td>发起流程动态追加修改节点处理人，更灵活的实例级动态调整节点处理人的可伸缩解决方案</td><td>✅</td></tr><tr><td>认领</td><td>公共任务认领</td><td>✅</td></tr><tr><td>已阅</td><td>任务是否查看状态显示</td><td>✅</td></tr><tr><td>催办</td><td>通知当前活动任务处理人办理任务</td><td>✅</td></tr><tr><td>沟通</td><td>与当前活动任务处理人沟通</td><td>✅</td></tr><tr><td>终止</td><td>在任意节点终止流程实例</td><td>✅</td></tr><tr><td>定时</td><td>设置时间节点定时执行任务进入下一步</td><td>✅</td></tr><tr><td>触发</td><td>执行流程触发器业务逻辑实现，结束执行进入下一步，支持【立即触发】【定时触发】两种实现</td><td>✅</td></tr><tr><td>动态构建</td><td>根据当前任务动态构建执行新任务，并且不体现在流程图中</td><td>✅</td></tr><tr><td>超时审批</td><td>根据设置的超时审批时间，超时后自动审批【自动通过或拒绝】</td><td>✅</td></tr><tr><td>自动提醒</td><td>根据设置的提醒时间，提醒审批人审批【可设定提醒次数】实现接口任意方式提醒【短信，邮件，微信，钉钉等】</td><td>✅</td></tr><tr><td>暂存待审</td><td>流程发起时，可以暂存待审，发起人后续修改，审批重新提交激活流程实例</td><td>✅</td></tr></tbody></table>',19)]))}const g=d(l,[["render",c]]);export{b as __pageData,g as default};
